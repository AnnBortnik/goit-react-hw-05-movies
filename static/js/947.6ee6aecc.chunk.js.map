{"version":3,"file":"static/js/947.6ee6aecc.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst ActorContainer = styled.div`\n  margin: 10px;\n  padding: 10px;\n`;\n\nconst ActorImage = styled.img`\n  width: 100px;\n  height: auto;\n`;\n\nconst ActorName = styled.h2`\n  font-size: 1.5em;\n`;\n\nconst ActorCharacter = styled.p`\n  font-size: 1em;\n`;\n\nconst Cast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=1c5228584da0b71ee3fe123f2b8ccc2b`);\n        setCast(result.data.cast);\n      } catch (error) {\n        console.error('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast ? (\n        <div>\n          {cast.map(actor => (\n            <ActorContainer key={actor.cast_id}>\n              <ActorName>{actor.name}</ActorName>\n              <ActorCharacter>{actor.character}</ActorCharacter>\n              {actor.profile_path && (\n                <ActorImage src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`} alt={actor.name} />\n              )}\n            </ActorContainer>\n          ))}\n        </div>\n      ) : 'Loading...'}\n    </div>\n  );\n};\n\nexport default Cast;","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, Route, Routes, useNavigate, useLocation } from 'react-router-dom';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews'; \nimport axios from 'axios';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport styled from 'styled-components';\n\n\nconst MovieContainer = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: flex-end;\n`;\n\nconst MovieInfo = styled.div`\n  margin-left: 20px;\n`;\n\nconst MoviePoster = styled.img`\n  width: 200px;\n  height: auto;\n`;\n\nconst MovieActions = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 20px;\n  border-top: 2px solid black; \n  border-bottom: 2px solid black; \n  padding: 20px 0;\n  margin-bottom: 20px;  \n  gap: 2px;\n`;\n\nconst GoBackButton = styled.button`\n  display: flex;\n  align-items: center;\n  border: none;\n  background: none;\n  cursor: pointer;\n  font-size: 13px;\n  color: #333;\n  margin-bottom: 12px;\n  margin-top: 12px;\n  &:hover {\n    color: lightblue;\n  }\n`;\n\nconst BackIcon = styled(FaArrowLeft)`\n  margin-right: 5px;\n`;\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const { movieId } = useParams(); \n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`https://api.themoviedb.org/3/movie/${movieId}?api_key=1c5228584da0b71ee3fe123f2b8ccc2b`);\n        setMovieDetails(result.data);\n      } catch (error) {\n        console.error('Error fetching movie details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  const handleGoBack = () => {\n    if (location.state && location.state.from) {\n      navigate(location.state.from);\n    } else {\n      navigate('/home');\n    }\n  };\n\n  if (!movieDetails) return 'Loading...';\n\n  return (\n    <>\n      <GoBackButton onClick={handleGoBack}>\n        <BackIcon />\n        Go Back\n      </GoBackButton>\n      <MovieContainer>\n        <MovieInfo>\n          <h1>{movieDetails.title}</h1>\n          <p>User Score: {Math.round(movieDetails.vote_average * 10)}%</p>\n          <h3>Overview:</h3>\n          <p>{movieDetails.overview}</p>\n          <h3>Genres:</h3>\n          <p>{movieDetails.genres.map(genre => genre.name).join(', ')}</p>\n        </MovieInfo>\n        <MoviePoster src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`} alt={movieDetails.title} />\n      </MovieContainer>\n      <MovieActions>\n        <h3>Additional Information</h3>\n          <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n      </MovieActions>\n      <Routes>\n        <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n        <Route path=\"reviews\" element={<Reviews />} />\n      </Routes>\n    </>\n  );\n};\n\nexport default MovieDetails;","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom'; \nimport axios from 'axios';\nimport styled from 'styled-components';\n\nconst ReviewContainer = styled.div`\n  margin-bottom: 20px;\n  padding: 10px;\n  border-bottom: 2px solid black;\n`;\n\nconst ReviewAuthor = styled.h2`\n  margin: 0 0 10px 0;\n`;\n\nconst ReviewContent = styled.p`\n  margin: 0;\n`;\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=1c5228584da0b71ee3fe123f2b8ccc2b`);\n        setReviews(result.data.results);\n      } catch (error) {\n        console.error('Error fetching movie reviews:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews.length ? (\n        <div>\n          {reviews.map(review => (\n            <ReviewContainer key={review.id}>\n              <ReviewAuthor>{review.author}</ReviewAuthor>\n              <ReviewContent>{review.content}</ReviewContent>\n            </ReviewContainer>\n          ))}\n        </div>\n      ) : (\n        'No reviews yet...'\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;"],"names":["ActorContainer","styled","_templateObject","_taggedTemplateLiteral","ActorImage","_templateObject2","ActorName","_templateObject3","ActorCharacter","_templateObject4","Cast","cast","setCast","useState","movieId","useParams","useEffect","async","result","axios","concat","data","error","console","fetchData","_jsx","children","map","actor","_jsxs","name","character","profile_path","src","alt","cast_id","MovieContainer","MovieInfo","MoviePoster","MovieActions","GoBackButton","_templateObject5","BackIcon","FaArrowLeft","_templateObject6","MovieDetails","movieDetails","setMovieDetails","navigate","useNavigate","location","useLocation","_Fragment","onClick","handleGoBack","state","from","title","Math","round","vote_average","overview","genres","genre","join","poster_path","Link","to","Routes","Route","path","element","Reviews","ReviewContainer","ReviewAuthor","ReviewContent","reviews","setReviews","results","length","review","author","content","id"],"sourceRoot":""}